plugins {
    id 'java'
}

apply plugin: 'checkstyle'
apply plugin: 'pmd'
apply plugin: 'maven'

group 'com.cps3230.edu.mt'
version '1.0-SNAPSHOT'

sourceCompatibility = 1.10

repositories {
    mavenCentral()
    jcenter()
}

checkstyle {
    toolVersion = "8.14"
}


dependencies {
    def junit4Version        = '4.12'
    def junitVintageVersion  = '5.3.1'
    def junitJupiterVersion  = '5.3.1'
    def junitPlatformVersion = '1.3.1'

    compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.11.1'
    compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.11.1'
    compile 'nz.ac.waikato.modeljunit:modeljunit:2.5'
    
    // JUnit Jupiter API and TestEngine implementation
    testCompile("org.junit.jupiter:junit-jupiter-params:5.2.0")
    testCompile("org.junit.jupiter:junit-jupiter-api:${junitJupiterVersion}")
    testRuntime("org.junit.jupiter:junit-jupiter-engine:${junitJupiterVersion}")

    testCompile("junit:junit:${junit4Version}")
    dependencies { testCompile "org.mockito:mockito-core:2.+" }
    testRuntime("org.junit.vintage:junit-vintage-engine:${junitVintageVersion}") {
        because 'allows JUnit 3 and JUnit 4 tests to run'
    }

    testRuntime("org.junit.platform:junit-platform-launcher:${junitPlatformVersion}") {
        because 'allows tests to run from IDEs that bundle older version of launcher'
    }
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}

compileJava {
    sourceCompatibility = 10
    targetCompatibility = 10
}

compileTestJava {
    sourceCompatibility = 10
    targetCompatibility = 10
    options.compilerArgs += '-parameters'
}
